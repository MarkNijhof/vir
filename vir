#!/bin/bash

# NOTE: None of this works if you have spaces in your directory paths
# but seriously - who has spaces in their directory paths?
# You deserve to have this go wrong if you have spaces in your directory paths
# (Nah, joking - I'll fix it when somebody complains)

init() {
  mkdir -p $TARGETDIR
  if [[ "$(ls -A $TARGETDIR)" ]]; then
    read -p "Directory is not empty, do you wish to proceed? (y/n)" -n 1 -r
    echo
    if [[ ! $REPLY =~ ^[Yy]$ ]]; then
      exit 0
    fi
  fi
  echo "initing $APP_NAME with template: $TEMPLATE"
  cp -r $TEMPLATEDIR/_master/* $TARGETDIR/
  add_app
}

munge_file() {
  local file=$1
  local variable=$2
  local value=$3
  local MATCH="s/\$$variable/$value/g"
  mv $file $(echo $file | sed $MATCH)
}

template_files() {
  local app=$1
  local variable=$2
  local value=$3
  local MATCH="s/\$$variable/$APP_NAME/g"
  $(find $app -type f -exec sed -i $MATCH {} \;)
}

add_app() {
  local TARGET_APP_DIR=$TARGETDIR/apps/$APP_NAME
  mkdir -p $TARGET_APP_DIR
  cp -r $TEMPLATEDIR/$TEMPLATE/* $TARGET_APP_DIR
  for file in $(find $TARGET_APP_DIR -name "*\$*")
  do
    munge_file $file "app" $APP_NAME
  done
  template_files $TARGET_APP_DIR  "app" $APP_NAME
}

usage() {
  echo "Usage foo"
  exit 1
}


COMMAND=$1
TEMPLATE=empty
APP_NAME=
TARGETDIR=$(pwd)
OPTIND=2
SOURCEDIR=$HOME/.vir
TEMPLATEDIR=$SOURCEDIR/templates

case "$COMMAND" in
  "init")
      while getopts ":t:d:" option; do
        case "$option" in
          t)
            TEMPLATE=$OPTARG
            ;;
          d)
            TARGETDIR=$OPTARG
            ;;
          ?)
            echo "Error: unknown option -$OPTARG"
            usage "init"
            ;;
        esac
      done
      shift $(($OPTIND - 1))
      APP_NAME=$1
      if [[ -z $APP_NAME ]]; then
        usage "init"
      fi
      init $1
    ;;
  *)
    usage
    ;;
esac
