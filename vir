#!/bin/bash

# NOTE: None of this works if you have spaces in your directory paths
# but seriously - who has spaces in their directory paths?
# You deserve to have this go wrong if you have spaces in your directory paths
# (Nah, joking - I'll fix it when somebody complains)

munge_file() {
  local file=$1
  local variable=$2
  local value=$3
  local MATCH="s/\$$variable/$value/g"
  mv $file $(echo $file | sed $MATCH)
}

munge_files() {
  for file in $(find $TARGET_DIR -name "*\$*")
  do
    if [[ -d $file ]]; then
      munge_file $file "app" $APP_NAME
      munge_files
      break
    else
      munge_file $file "app" $APP_NAME
    fi
  done
}

template_files() {
  local app=$1
  local variable=$2
  local value=$3
  local MATCH="s/\$$variable/$APP_NAME/g"
  $(find $TARGET_DIR -type f -exec sed -i $MATCH {} \;)
}

make_bootscript() {
  local SCRIPT=""
  if [[ -f "make_bootscript.sh" ]]; then
    echo "Found local bootscript, using that as an override"
    SCRIPT="./make_bootscript.sh"
  else
    SCRIPT="$SOURCEDIR/make_bootscript.sh"
  fi
  exec $SCRIPT
}

run_app() {
  local SCRIPT=""
  if [[ -f "run.sh" ]]; then
    echo "Found local runscript, using that as an override"
    $(./run.sh $@) # Need to trim args though
  else
    # Parse args
    local rel_dir=apps/$APP_NAME/release-files
    local boot=$APP_NAME
    erl -pa deps/*/ebin deps/*/apps/*/ebin apps/*/ebin -setcookie $COOKIE $KERNEL -boot $boot -config $rel_dir/sys.config -$boot mode $RUN_MODE
  fi
}

init() {
  mkdir -p $TARGET_DIR
  if [[ "$(ls -A $TARGET_DIR)" ]]; then
    read -p "Directory is not empty, do you wish to proceed? (y/n)" -n 1 -r
    echo
    if [[ ! $REPLY =~ ^[Yy]$ ]]; then
      exit 0
    fi
  fi
  echo "initing $APP_NAME with template: $TEMPLATE"
  cp -r $TEMPLATEDIR/$TEMPLATE/* $TARGET_DIR
  munge_files
  template_files $TARGET_DIR  "app" $APP_NAME
  cd $TARGET_DIR
  make
  make_bootscript
}

usage() {
  echo "Usage foo"
  exit 1
}


COMMAND=$1
TEMPLATE=empty
APP_NAME=
TARGET_DIR=$(pwd)
OPTIND=2
SOURCEDIR=$HOME/.vir
TEMPLATEDIR=$SOURCEDIR/templates
RUN_MODE=''
COOKIE='cookie'
KERNEL='-kernel inet_dist_listen_min 9100 inet_dist_listen_max 9105'

case "$COMMAND" in
  "init")
      while getopts ":t:d:" option; do
        case "$option" in
          t)
            TEMPLATE=$OPTARG
            ;;
          d)
            TARGET_DIR=$OPTARG
            ;;
          ?)
            echo "Error: unknown option -$OPTARG"
            usage "init"
            ;;
        esac
      done
      shift $(($OPTIND - 1))
      APP_NAME=$1
      if [[ -z $APP_NAME ]]; then
        usage "init"
      fi
      init $1
    ;;
  "boot")
    make_bootscript
    ;;
  "run")
    while getopts ":s:dlm:c:k:" option; do
      case "$option" in
        m)
          RUN_MODE=$OPTARG
          ;;
        c)
          COOKIE=$OPTARG
          ;;
        k)
          KERNEL=$OPTARG
          ;;
        ?)
          echo "Error: unknown option -$OPTARG"
          usage
          exit 1
          ;;
      esac
    done
    shift $(($OPTIND - 1))
    APP_NAME=$1
    run_app
    ;;
  *)
    usage
    ;;
esac
